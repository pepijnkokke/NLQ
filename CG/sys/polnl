-- Polarised Lambek calculus.


set finite
set structural
set parse_with  = ⟨⟩ ⊗
set agda_name   = LG
set agda_module = Example.System.fLG


-- Axioms.
ax⁻  :  [ A ] ⊢ · A ·  where atomic A and negative A
ax⁺  :  · B · ⊢ [ B ]  where atomic B and positive B


-- Focusing and defocusing rules.
⇁    :    X   ⊢ · B · →    X   ⊢ [ B ]  where negative B
↽    :  · A · ⊢   Y   →  [ A ] ⊢   Y    where positive A
⇀    :    X   ⊢ [ B ] →    X   ⊢ · B ·  where positive B
↼    :  [ A ] ⊢   Y   →  · A · ⊢   Y    where negative A


-- Rules for (⇐ , ⊗ , ⇒)
⊗ᴸ   :  · A · ⊗ · B · ⊢ Y  →  · A ⊗ B · ⊢ Y
⇒ᴿ   :  X ⊢ · A · ⇒ · B ·  →  X ⊢ · A ⇒ B ·
⇐ᴿ   :  X ⊢ · B · ⇐ · A ·  →  X ⊢ · B ⇐ A ·
⊗ᴿ   : X ⊢ [ A ]  →    Y   ⊢ [ B ]  →    X ⊗ Y   ⊢ [ A ⊗ B ]
⇒ᴸ   : X ⊢ [ A ]  →  [ B ] ⊢   Y    →  [ A ⇒ B ] ⊢   X ⇒ Y
⇐ᴸ   : X ⊢ [ A ]  →  [ B ] ⊢   Y    →  [ B ⇐ A ] ⊢   Y ⇐ X
r⇒⊗  :  Y ⊢ X ⇒ Z  →  X ⊗ Y ⊢ Z
r⊗⇒  :  X ⊗ Y ⊢ Z  →  Y ⊢ X ⇒ Z
r⇐⊗  :  X ⊢ Z ⇐ Y  →  X ⊗ Y ⊢ Z
r⊗⇐  :  X ⊗ Y ⊢ Z  →  X ⊢ Z ⇐ Y


