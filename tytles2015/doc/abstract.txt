This is a talk about the proof assistant Agda. More specifically,about
using Agda to prove things and all the advantages of doing so.

If you do not have the time to come to the talk, those advantages are
that you: a) have a machine-checked implementation of your theory; b)
can compute with your proofs; and c) can typeset Agda proofs so that
the proofs you write are the proofs you publish.

The first half of this talk is going to be spent introducing the Agda
language, programming in Agda and writing papers in literate Agda. The
second half is going to be spend demoing this process by example, by
formalising the Lambek-Grishin calculus (LG) in Agda, discussing a
proof for cut-elimination in LG, and outlining a CPS translation from
LG into Agda.

We will finish up by providing several example analyses of sentences.
